--村规决斗：杂鱼杂鱼
--开局时，双方将1张鱼雨（94626050）从卡组外表侧表示除外。
--这场决斗中这张卡不是表侧表示除外的场合，这张卡表侧表示除外。
--这张卡得到以下效果。
--1回合最多3次，在主要阶段才能处理这个效果。
--从卡组外随机选1张名字中带【YU】字的卡。
--如果是怪兽，则表侧攻击表示放置在场上；如果是魔法陷阱，则盖放在场上。
--如果是超量怪兽，把卡组最上方2张卡当作超量素材。
--如果是陷阱或速攻魔法，盖放的回合也可以发动。
--（如果没有空位，什么都不做）

CUNGUI = {}
CUNGUI.RuleCardCode=94626050
CUNGUI.Fishes = {122520,128454,220414,269510,282886,340002,425934,
572850,581014,816427,911883,1005587,1127737,1295111,
1482001,1487805,1539051,1861629,1861630,2009101,2377034,
2405631,2525268,2843014,2971446,2992467,3072808,3137279,
3160805,3361010,3574681,3580032,3643300,3679218,3752422,
3972721,4068622,4081665,4141820,4149689,4168871,4239451,
4545854,4779091,4807253,4836680,4896788,4997565,5126490,
5128859,5376159,5560911,5672432,5795882,5846183,5915629,
5975022,6327734,6417578,6552971,6622715,6850209,7093411,
7241272,7268133,7305060,7337976,7391448,7459919,7563579,
7602800,7714344,7799906,8267140,8275702,8384771,8437145,
8571567,8576764,8820526,8822710,8972398,9000988,9047460,
9106362,9109991,9238125,9251497,9334391,9350312,9416697,
9822220,9925983,9929398,10004783,10312660,10560119,10602628,
10731333,10759529,10925955,10963799,11109820,11155484,11481610,
11502550,11613567,11760174,11913700,12247206,12255007,12744567,
12877076,12931061,12986778,13073850,13108445,13224603,13256226,
13521194,13761956,13846680,13965201,14057297,14088859,14124483,
14391920,14469229,14785765,14799437,15083304,15449853,15452043,
15661378,15844566,15845914,15978426,16051717,16157341,16165939,
16209941,16310544,16313112,16329071,16433136,16516630,16617334,
16625614,16632144,17016362,17032740,17063599,17189677,17255673,
17272964,17330916,17377751,17418744,17465972,17484499,17540705,
17679043,17857780,17994645,18063928,18144506,18144507,18271561,
18302224,18377261,18407024,18666161,18720257,18828179,18847598,
18897163,18967507,19050066,19059929,19162134,19275188,19280590,
19324993,19394153,19462747,19578592,19594506,19596712,19619755,
19739265,19801646,19814508,19828680,19847532,19963185,20003527,
20065549,20281581,20403123,20450925,20590784,20644748,20838380,
20899496,21051146,21123811,21187631,21293424,21313376,21488686,
21507589,21516908,21558682,21615956,21698716,21727231,21767650,
21844576,21844577,21949879,22076135,22091345,22123627,22138839,
22446869,22628574,22765132,22819092,22835145,22888900,23116809,
23213239,23297235,23309606,23338098,23377694,23440231,23771716,
24435369,24566654,24874630,24996659,25050038,25140659,25209168,
25407643,25435080,25811989,26034577,26223582,26270847,26302107,
26304459,26586849,26631975,26640671,26775203,26781870,27004302,
27126980,27383110,27527047,27561302,27827272,27882994,27980138,
28126717,28174796,28190303,28325165,28332833,28534130,28593363,
28677304,29169993,29208536,29354228,29402771,29929832,30241314,
30348744,30822527,31053337,31111109,31242786,31281980,31292357,
31444249,31525442,31548814,31571902,31764700,31766317,31817415,
31944175,31987274,32530043,32566831,32703716,32710364,32787239,
32933942,33103459,33236860,33244944,33300669,33776734,33823832,
33833230,33897356,33904024,34370473,34379489,34707034,34822850,
34822851,34976176,35259350,35261759,35486099,35726888,35956022,
36029076,36119641,36328300,36415522,36442179,36527535,36577931,
36745317,36795102,37168514,37256334,37440988,37442336,37444964,
37511832,37561138,37684215,37745740,37781520,37961969,37991342,
38167722,38409239,38562933,38904695,38999506,39004808,39019325,
39078434,39260991,39275698,39522887,39622156,39761138,39964797,
40080312,40189917,40279770,40318957,40398073,40575313,40663548,
40669071,41215808,41440148,41458579,41902352,42002073,42015635,
42291297,42463414,42562690,42685062,42705243,43096270,43191636,
43218406,43241495,43316238,43316239,43509019,43527730,43694650,
43906884,44221928,44364077,44481227,44509898,44635489,44649322,
44760562,44883600,44891812,44944304,44968687,45045866,45236142,
45313724,45462149,45500495,45591967,45653036,45792753,45943123,
46037983,46066477,46136942,46358784,46372010,46652477,46710683,
46809548,46815301,46820049,46910446,46918794,46947713,47075569,
47121070,47149093,47198668,47274077,47297616,47408488,47484352,
47741109,47754278,47778083,48386462,48445393,48576971,48582558,
48739166,48996569,49003716,49140998,49238328,49258578,49352945,
49460512,49597193,49820233,50005218,50056656,50155385,50176820,
50215517,50282757,50304345,50366775,50449881,50732780,50823978,
50834074,50901852,50916353,51192573,51282878,51316684,51570882,
51735257,51790181,51849216,52038272,52038441,52038442,52098461,
52248570,52277807,52350806,52534264,52665542,52869807,52900379,
52963531,53174748,53334471,53389254,53413628,53678698,53713014,
53714009,53724621,54082269,54109233,54112932,54326448,54360049,
54374642,54563536,54569495,54579801,54594017,54749427,54862960,
55144522,55171412,55210709,55521751,55553602,55554175,55610595,
55702233,55997110,55998462,56223084,56256517,56433456,56675280,
56677752,56733747,56818977,57047293,57111330,57116033,57116034,
57274196,57433966,57736667,57946551,57995165,58036229,58092907,
58131925,58371671,58371672,58446973,58641905,58712976,58820853,
58873391,58901502,58938528,58996839,59255742,59383041,59687381,
59762399,60306277,60551528,60718396,60862676,60954556,61027400,
61245403,61245672,61254509,61583217,61654098,61965407,62023839,
62133026,62219643,62530723,62892347,62962630,63364266,63432835,
63633694,63708033,63749102,63789924,64014615,64207696,64274292,
64414267,64450427,64655485,64659851,65029288,65156847,65195959,
65458948,65500515,65563871,65570596,65685470,65898344,65910922,
66337215,66378485,66668900,66719324,66768175,66853752,67105242,
67169062,67237709,67267333,67371383,67696066,67808837,67831115,
67955331,68120130,68215963,68226653,68319538,68601507,68819554,
69031175,69035382,69087397,69105797,69181753,69211541,69228245,
69243722,69542930,69572024,69700783,69750536,69884162,69893315,
69937550,69973414,70122149,70261145,70456282,70458081,70465810,
70479321,70595331,70655556,70711847,70917315,71060915,71187462,
71200730,71277255,71417170,71564150,71578874,71620241,71650854,
71705144,71863024,71985676,72272462,72287557,72309040,72402069,
72708264,72714392,72843899,72859417,72881007,72926163,73018302,
73026394,73130445,73219648,73244186,73355951,73421698,73511233,
73534250,73652465,73734821,73776643,74078255,74115234,74637266,
74839123,74983881,74983882,75041269,75119040,75215744,75223115,
75372290,75375465,75376965,75452921,75498415,75499502,75771170,
76052811,76133574,76203291,76372778,76512652,76593718,76614340,
76704943,76848240,76862289,76913983,76972801,77152542,77372241,
77610503,77700347,77827521,78098950,78184733,78199891,78225596,
78362751,78371393,78512663,78564023,78748366,78783370,78835747,
79407975,79656239,79698395,79856792,79864860,79912449,79967395,
80044027,80170678,80516007,80621253,80773359,81020646,81055000,
81105204,81260679,81380218,81386177,81434470,81439173,81439174,
81470373,81519836,81555617,81566151,81983656,82085295,82184400,
82224646,82263578,82340056,82661461,82734805,83266006,83518674,
83575471,83928661,83968380,84171830,84305651,84330567,84544192,
84569017,84569886,84845628,85008676,85059922,85215458,85309439,
85457355,85507811,85679527,85763457,85766789,85802526,85840608,
86066372,86100785,86137485,86157908,86239173,86346643,86825483,
87047161,87116749,87188910,87246309,87259933,87313164,87390067,
87475570,87639778,87778106,88132637,88301393,88305978,88307361,
88358139,88369727,88413677,88928798,89040386,89113320,89226534,
89258906,89405199,89423971,89538537,89617515,89943723,89943724,
90050480,90135989,90179822,90307498,90312154,90337190,90361289,
90465153,90807199,91438994,91449532,91554542,91584698,91654806,
91711547,91718579,91907707,92053608,92079625,92170894,92411493,
92565383,92644052,92731385,92767273,92932860,92958307,93238626,
93369354,93581434,93892436,93946239,94042337,94145021,94145022,
94432298,94626050,94681654,95040215,95326659,95466842,95568112,
95600067,95621257,95888876,95905259,95943058,96055137,96127902,
96331676,96399967,96420087,96606246,96622984,97007933,97439308,
97612389,98022050,98173209,98585345,98596597,98637386,98645731,
98649372,98672567,98935722,98954106,99266988,99456344,99543666,
99745551,}

function Auxiliary.PreloadUds()
	--adjust
	local e1=Effect.GlobalEffect()
	e1:SetType(EFFECT_TYPE_FIELD+EFFECT_TYPE_CONTINUOUS)
	e1:SetProperty(EFFECT_FLAG_IGNORE_IMMUNE)
	e1:SetCode(EVENT_ADJUST)
	e1:SetOperation(CUNGUI.AdjustOperation)
	Duel.RegisterEffect(e1,0)
end
function CUNGUI.AdjustOperation()
	if not CUNGUI.RandomSeedInit then
		CUNGUI.RandomSeedInit = true
		Duel.LoadScript("random.lua")
		math.randomseed(_G.RANDOMSEED)
		for i=1,10 do math.random(1000) end
	end
	if not CUNGUI.RuleCardInit then
		CUNGUI.RuleCardInit = true
		CUNGUI.RegisterCardRule(0)
		CUNGUI.RegisterCardRule(1)
	end
	if not CUNGUI.DrawInit then
		CUNGUI.DrawInit = true
		--Duel.Draw(1,1,REASON_RULE)
	end
	if CUNGUI.RuleCard[0] and (not CUNGUI.RuleCard[0]:IsLocation(LOCATION_REMOVED) or not CUNGUI.RuleCard[0]:IsFaceup()) then
		Duel.Remove(CUNGUI.RuleCard[0],POS_FACEUP,REASON_RULE)
	end
	if CUNGUI.RuleCard[1] and (not CUNGUI.RuleCard[1]:IsLocation(LOCATION_REMOVED) or not CUNGUI.RuleCard[1]:IsFaceup()) then
		Duel.Remove(CUNGUI.RuleCard[1],POS_FACEUP,REASON_RULE)
	end
	if CUNGUI.RuleCard[0] and not CUNGUI.RuleCard[0]:IsFaceup() then
		Duel.ChangePosition(CUNGUI.RuleCard[0],POS_FACEUP)
	end
	if CUNGUI.RuleCard[1] and not CUNGUI.RuleCard[1]:IsFaceup() then
		Duel.ChangePosition(CUNGUI.RuleCard[1],POS_FACEUP)
	end
end

CUNGUI.RuleCard={}

function CUNGUI.RegisterCardRule(tp)
	local c=Duel.CreateToken(tp,CUNGUI.RuleCardCode)
	Duel.Remove(c,POS_FACEUP,REASON_RULE)
	CUNGUI.RuleCard[tp]=c
	--forbid
	local e1=Effect.CreateEffect(c)
	e1:SetDescription(aux.Stringid(66666004,4))
	e1:SetType(EFFECT_TYPE_FIELD+EFFECT_TYPE_CONTINUOUS)
	e1:SetCode(EVENT_FREE_CHAIN)
	e1:SetCountLimit(3)
	e1:SetProperty(EFFECT_FLAG_CANNOT_INACTIVATE+EFFECT_FLAG_CAN_FORBIDDEN+EFFECT_FLAG_CANNOT_DISABLE)
	e1:SetRange(LOCATION_REMOVED)
	e1:SetCondition(CUNGUI.rulecond)
	e1:SetTarget(CUNGUI.ruletg)
	e1:SetOperation(CUNGUI.ruleop)
	c:RegisterEffect(e1)
end

function CUNGUI.rulecond(e,tp,eg,ep,ev,re,r,rp)
	return (Duel.GetCurrentPhase()==PHASE_MAIN1 or Duel.GetCurrentPhase()==PHASE_MAIN2) and Duel.GetCurrentChain()<1 and Duel.GetTurnPlayer()==tp
end
function CUNGUI.ruletg(e,tp,eg,ep,ev,re,r,rp,chk)
	if chk==0 then return Duel.CheckLPCost(tp,350) end
	Duel.Hint(HINT_CARD,1-tp,e:GetHandler():GetCode())
	Duel.PayLPCost(tp,350)
end
function CUNGUI.ruleop(e,tp,eg,ep,ev,re,r,rp)
	local code=CUNGUI.Fishes[math.random(#CUNGUI.Fishes)]
	local c=Duel.CreateToken(tp,code)
	if c:IsType(TYPE_MONSTER) then
		if Duel.GetMZoneCount(tp)>0 then
			Duel.MoveToField(c,tp,tp,LOCATION_MZONE,POS_FACEUP_ATTACK,true)
			if c:IsType(TYPE_XYZ) then
				CUNGUI.AddOverlay(c)
			end
		end
	else
		if Duel.GetLocationCount(tp,LOCATION_SZONE)>0 then
			Duel.SSet(tp,c)
			--act in set turn
			local e1=Effect.CreateEffect(c)
			e1:SetType(EFFECT_TYPE_SINGLE)
			e1:SetCode(EFFECT_TRAP_ACT_IN_SET_TURN)
			e1:SetProperty(EFFECT_FLAG_SET_AVAILABLE)
			e1:SetReset(RESET_EVENT+RESETS_STANDARD)
			e1:SetCondition(aux.TRUE)
			c:RegisterEffect(e1)
		end
	end
end

function CUNGUI.AddOverlay(c)
	if not c:IsLocation(LOCATION_MZONE) or not c:IsType(TYPE_XYZ) then return end
	local g=Group.CreateGroup()
	for i=1,2 do
		local tc = Duel.CreateToken(c:GetControler(), 39526584)
		g:AddCard(tc)
	end
	if Duel.SendtoHand(g, c:GetControler(), REASON_RULE)~=2 then return end
	Duel.Overlay(c,g)
end
